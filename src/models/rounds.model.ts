import {
  ColumnType,
  Generated,
  Selectable,
  Insertable,
  Updateable,
} from "kysely";

// todo: Use TS for key names maybe, depending on how many keys there are
export interface RoundTable {
  // todo: use autogenerated string by creating a procedure in the db
  // https://stackoverflow.com/questions/19530736/how-can-i-generate-a-unique-string-per-record-in-a-table-in-postgres
  game_id: Generated<number>;
  round: number;
  player1_move_id: string;
  player2_move_id: string;
  player3_move_id: string | null;
  player4_move_id: string | null;
  player5_move_id: string | null;
  player6_move_id: string | null;
  player1_target: string;
  player2_target: string;
  player3_target: string | null;
  player4_target: string | null;
  player5_target: string | null;
  player6_target: string | null;
  player1_position: number;
  player2_position: number;
  player3_position: number | null;
  player4_position: number | null;
  player5_position: number | null;
  player6_position: number | null;
  player1_points: number;
  player2_points: number;
  player3_points: number | null;
  player4_points: number | null;
  player5_points: number | null;
  player6_points: number | null;
}

export type Round = Selectable<RoundTable>;
export type NewRound = Insertable<RoundTable>;
export type UpdatedRound = Updateable<RoundTable>;
